diff --git a/node_modules/@zk-email/helpers/dist/dkim/index.d.ts b/node_modules/@zk-email/helpers/dist/dkim/index.d.ts
index 3d4525b..b295e56 100644
--- a/node_modules/@zk-email/helpers/dist/dkim/index.d.ts
+++ b/node_modules/@zk-email/helpers/dist/dkim/index.d.ts
@@ -1,9 +1,9 @@
 /// <reference types="node" />
 export interface DKIMVerificationResult {
-    publicKey: bigint;
-    signature: bigint;
-    headers: Buffer;
-    body: Buffer;
+    publicKey: string;
+    signature: string;
+    headers: string;
+    body: string;
     bodyHash: string;
     signingDomain: string;
     selector: string;
diff --git a/node_modules/@zk-email/helpers/dist/dkim/index.js b/node_modules/@zk-email/helpers/dist/dkim/index.js
index 25acf97..bcfe0ba 100644
--- a/node_modules/@zk-email/helpers/dist/dkim/index.js
+++ b/node_modules/@zk-email/helpers/dist/dkim/index.js
@@ -4,7 +4,7 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
 };
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.verifyDKIMSignature = void 0;
-const node_forge_1 = require("node-forge");
+
 const dkim_verifier_1 = require("../lib/mailauth/dkim-verifier");
 const tools_1 = require("../lib/mailauth/tools");
 const sanitizers_1 = __importDefault(require("./sanitizers"));
@@ -33,17 +33,14 @@ async function verifyDKIMSignature(email, domain = '', enableSanitization = true
         }
     }
     const { status: { result, comment }, signingDomain, publicKey, signature, status, body, bodyHash, } = dkimResult;
-    if (result !== 'pass') {
-        throw new Error(`DKIM signature verification failed for domain ${signingDomain}. Reason: ${comment}`);
-    }
-    const pubKeyData = node_forge_1.pki.publicKeyFromPem(publicKey.toString());
+
     return {
-        signature: BigInt(`0x${Buffer.from(signature, 'base64').toString('hex')}`),
-        headers: status.signedHeaders,
-        body,
+        signature: signature.toString(),
+        headers: status.signedHeaders.toString(),
+        body: body.toString(),
         bodyHash,
         signingDomain: dkimResult.signingDomain,
-        publicKey: BigInt(pubKeyData.n.toString()),
+        publicKey: publicKey.toString(),
         selector: dkimResult.selector,
         algo: dkimResult.algo,
         format: dkimResult.format,
